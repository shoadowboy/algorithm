package com.demo.algorithm.hash;

import java.util.HashMap;
import java.util.Map;

/**
 * Given two strings s and t which consist of only lowercase letters.
 * String t is generated by random shuffling string s and then add 
 * one more letter at a random position.
 * Find the letter that was added in t.
 * @author peichunle
 * 思路:把s的char放到hash中，遍历t,s中可能有重复的
 * 别人的思路，直接ascll码相加，然后相减就是剩余的
 *
 */
public class FindtheDifference {
//	public static char findTheDifference(String s, String t) {
//		char[] charArray = s.toCharArray();
//		Map<Character,Integer> map = new HashMap<Character,Integer>();
//		for (char c : charArray) {
//			if(map.containsKey(c)){
//				map.put(c, map.get(c)+1);
//			}else{
//				map.put(c, 1);
//			}
//		}
//		for(int i=0;i<t.length();i++){
//			if(!map.containsKey(t.charAt(i))){
//				return t.charAt(i);
//			}else{
//				if(map.get(t.charAt(i))==1){
//					map.remove(t.charAt(i));
//				}else{
//					map.put(t.charAt(i), map.get(t.charAt(i))-1);
//				}
//			}
//		}
//		return 32;
//    }
	
	public static char findTheDifference(String s, String t) {
        int s_score = 0;
        int t_score = 0;
        for(int i=0; i<s.length(); i++) {
            s_score+=s.charAt(i);
            t_score+=t.charAt(i);
        }
        t_score+=t.charAt(s.length());
        return (char)(t_score-s_score);
    }
	
	public static void main(String[] args) {
		String t="ab";
		String s="a";
		char findTheDifference = findTheDifference(s, t);
		System.out.println(findTheDifference);
		
	}
}
